!!! html
html(ng-app='management')

    head

        link(rel='stylesheet', href='/css/bootstrap.css')
        link(rel='stylesheet', href='/css/bootcraft.css')
        link(rel='stylesheet', href='/css/font-awesome.min.css')

        script(src='/js/libs/jquery/1.7.2/jquery.min.js')
        script(src='/js/libs/angularjs/1.1.5/angular.min.js')
        script(src='/js/libs/angularjs/1.1.5/angular-resource.min.js')

        script.

            var app= angular.module('management', ['ngResource'], function ($routeProvider) {

                $routeProvider.when('/users', {
                    templateUrl:'users/', controller:'UsersViewCtrl'
                });
                $routeProvider.when('/users/create', {
                    templateUrl:'users/user/forms/create/', controller:'UsersUserCreateViewCtrl'
                });
                $routeProvider.when('/users/:userId', {
                    templateUrl:'users/user/forms/update/', controller:'UsersUserUpdateViewCtrl'
                });
            });



            app.controller('ViewCtrl', function ($scope, $location) {
                $scope.dialog= {
                    overlay: false
                };
                $scope.showDialog= function (type) {
                    $scope.dialog.overlay= type;
                }
                $scope.hideDialog= function () {
                    $scope.dialog.overlay= false;
                }
                $scope.hide= function () {
                    $location.url(
                        $location.path()
                    );
                }
                console.log($scope);
            });



            app.factory('CurrentUser', function ($resource) {
                var CurrentUser= $resource('/api/v1/user/:action', {}, {
                    logout: {method:'post', params:{action:'logout'}},
                });
                return CurrentUser;
            });

            app.controller('CurrentUserCtrl', function ($scope, $window, CurrentUser) {
                $scope.dropdown= {
                    isOpen: false
                };
                $scope.toggleDropdown= function () {
                    $scope.dropdown.isOpen= !$scope.dropdown.isOpen;
                }
                $scope.user= $scope.locals.user || CurrentUser.get(function () {
                    console.log('пользователь получен', arguments)
                });
                $scope.logout= function () {
                    CurrentUser.logout($scope.user, function () {
                        $window.location.reload();
                    });
                }
            });



            app.factory('User', function ($resource) {
                var User= $resource('/api/v1/users/:kind/:userId', {userId:'@id'}, {
                    get: {method:'get', params: {kind:'user', userId:'@id'}},
                    create: {method:'post'},
                    update: {method:'patch', params: {kind:'user', userId:'@id'}},
                    delete: {method:'delete', params: {kind:'user', userId:'@id'}},
                });
                return User;
            });

            app.filter('filterUsers', function () {
                return function (users) {
                    var filtered= [];
                    angular.forEach(users, function (user) {
                        if (!user.deletedAt) {
                            filtered.push(user);
                        }
                    });
                    return filtered;
                }
            })

            app.controller('UsersViewCtrl', function ($scope, $route, User) {
                $scope.selected= null;

                var Route= function (route) {
                    var params= route.params;
                    if ('create' === params.action) {
                        $scope.showDialog('create');
                    } else if ('delete' === params.action) {
                        $scope.selected= params.userId;
                        $scope.showDialog('delete');
                    } else {
                        $scope.hideDialog();
                    }
                }
                var route= $route.current;
                $scope.$on('$locationChangeSuccess', function (evt) {
                    if ($route.current && $route.current.controller === route.controller) {
                        Route($route.current);
                        $route.current= route;
                    }
                });
                Route($route.current);
            });

            app.controller('UsersUserUpdateViewCtrl', function ($scope, $route, $location, User) {
                $scope.errors= {};

                $scope.user= User.get($route.current.params, function () {
                    $scope.user.password= '';
                }, function () {

                });

                $scope.update= function (UserForm) {
                    $scope.user.$update(function () {
                        $location.path('/users');
                    }, function (err) {
                        $scope.errors= err.data.errors;
                        if (400 === err.status) {
                            angular.forEach(err.data.errors, function (error, input) {
                                UserForm[input].$setValidity(error.error, false);
                            });
                        }
                    });
                };

                $scope.change= function (input) {
                    var error= $scope.errors[input.$name];
                    if (error) {
                        if (input.$modelValue === error.value) {
                            input.$setValidity(error.error, false);
                        } else {
                            input.$setValidity(error.error, true);
                        }
                    }
                }

                $scope.delete= function () {
                    $scope.user.$delete(function () {
                        $location.path('/users');
                    }, function () {

                    });
                };
            });

            app.controller('UsersUserCreateViewCtrl', function ($scope, $route, $location, User) {
                $scope.errors= {};

                $scope.user= new User();

                $scope.create= function (UserForm) {
                    $scope.user.$create(function () {
                        $location.path('/users');
                    }, function (err) {
                        $scope.errors= err.data.errors;
                        if (400 === err.status) {
                            angular.forEach(err.data.errors, function (error, input) {
                                UserForm[input].$setValidity(error.error, false);
                            });
                        }
                    });
                }

                $scope.change= function (input) {
                    var error= $scope.errors[input.$name];
                    if (error) {
                        if (input.$modelValue === error.value) {
                            input.$setValidity(error.error, false);
                        } else {
                            input.$setValidity(error.error, true);
                        }
                    }
                }
            });

            app.controller('UsersCtrl', function ($scope, $http, User) {
                var users= $scope.users= User.query(function () {
                    console.log('пользователи загружены', arguments)
                }, function () {
                    console.error('пользователи не загружены', arguments)
                });
                $scope.send= function (form) {
                    var user= new User({
                        username: form.username.$modelValue,
                        password: form.password.$modelValue,
                    });
                    user.$save(function (user) {
                        console.log('удалось сохранить', arguments)
                        $scope.hide();
                        $scope.users.push(user);
                    }, function () {
                        console.log('не удалось сохранить', arguments)
                    });
                }
                $scope.delete= function (user) {
                    console.log('удалить', $scope.selected)
                    User.delete({userId:$scope.selected}, function () {
                        console.log('удалось удалить', arguments)
                    }, function () {
                        console.log('не удалось удалить', arguments)
                    });
                }
            });

            app.controller('UsersCreateFormCtrl', function ($scope) {
                console.log('create form ctrl')
            });

            app.controller('UsersDeleteFormCtrl', function ($scope) {
                console.log('delete form ctrl')
            });

    - var localsJson= JSON.stringify({user: user});
    body(ng-controller='ViewCtrl', ng-cloak, ng-init='locals=#{localsJson}')

        header
            .navbar.navbar-static-top
                .container

                    a.navbar-brand(href='./')
                        span FLYDEV ENGINE

                    .nav-collapse.collapse


                        ul.nav.navbar-nav
                            
                            li: a(href='#/users') Пользователи 
                                b.caret


                        ul.nav.navbar-nav.pull-right
                            li: a(href='../') Управление проектом
                            li.dropdown(ng-controller='CurrentUserCtrl', ng-class='{open:dropdown.isOpen}')
                                a.dropdown-toggle(href='', ng-click='toggleDropdown()')
                                    strong {{user.username}} 
                                    b.caret
                                
                                ul.dropdown-menu
                                    li: a(href='#/user')
                                        i.icon-user
                                        span   Аккаунт
                                    li.divider
                                    li: a(href='', ng-click='logout()')
                                        i.icon-signout
                                        span   Выход

        .view(ng-view, ng-animate='"view"')