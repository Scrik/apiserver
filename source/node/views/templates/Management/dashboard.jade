!!! html
html(ng-app='management')

    head

        link(rel='stylesheet', href='/css/bootstrap.css')
        link(rel='stylesheet', href='/css/bootcraft.css')
        link(rel='stylesheet', href='/css/font-awesome.min.css')

        style.

            .navbar-brand span {
                letter-spacing:2px;
            }
            .navbar-brand sup {
                font-size:small;
                opacity:.5;
            }

            abbr {
                letter-spacing:2px;
            }

        script(src='/js/libs/jquery/1.7.2/jquery.min.js')
        script(src='/js/libs/angularjs/1.1.5/angular.min.js')
        script(src='/js/libs/angularjs/1.1.5/angular-resource.min.js')

        script.

            var app= angular.module('management', ['ngResource'], function ($routeProvider) {

                $routeProvider.when('/store', {
                    templateUrl:'/partials/management/store', controller:'StoreViewCtrl'
                });

                $routeProvider.when('/store/items', {
                    templateUrl:'/partials/management/store/items', controller:'StoreItemsViewCtrl'
                });
                $routeProvider.when('/store/items/create', {
                    templateUrl:'/partials/management/store/items/create', controller:'StoreItemsCreateViewCtrl'
                });
                $routeProvider.when('/store/items/:itemId', {
                    templateUrl:'/partials/management/store/items/update', controller:'StoreItemsUpdateViewCtrl'
                });

                $routeProvider.when('/store/enchantments', {
                    templateUrl:'/partials/management/store/enchantments', controller:'StoreEnchantmentsViewCtrl'
                });
                $routeProvider.when('/store/enchantments/create', {
                    templateUrl:'/partials/management/store/enchantments/create', controller:'StoreEnchantmentsCreateViewCtrl'
                });
                $routeProvider.when('/store/enchantments/:enchantmentId', {
                    templateUrl:'/partials/management/store/enchantments/update', controller:'StoreEnchantmentsUpdateViewCtrl'
                });
            });

            app.controller('ViewCtrl', function ($scope, $location, $http, $window) {
                $scope.view= {};
            });


            app.factory('CurrentUser', function ($resource) {
                var CurrentUser= $resource('/api/v1/user/:action', {}, {
                    logout: {method:'post', params:{action:'logout'}},
                });
                return CurrentUser;
            });

            app.controller('CurrentUserCtrl', function ($scope, $window, CurrentUser) {
                $scope.dropdown= {
                    isOpen: false
                };
                $scope.toggleDropdown= function () {
                    $scope.dropdown.isOpen= !$scope.dropdown.isOpen;
                }
                $scope.user= $scope.locals.user || CurrentUser.get(function () {
                    console.log('пользователь получен', arguments)
                });
                $scope.logout= function () {
                    CurrentUser.logout($scope.user, function () {
                        $window.location.reload();
                    });
                }
            });



            app.controller('StoreViewCtrl', function ($scope, Item) {});


            app.factory('Item', function ($resource) {
                return $resource('/api/v1/store/items/:itemId', {itemId:'@id'}, {
                    create:{method:'post'},
                    update:{method:'patch', params:{itemId:'@id'}},
                    delete:{method:'delete', params:{itemId:'@id'}},
                });
            });

            app.controller('StoreItemsViewCtrl', function ($scope, $location, Item) {
                $scope.items= Item.query(function () {
                });
            });

            app.controller('StoreItemsCreateViewCtrl', function ($scope, $route, $location, Item) {
                $scope.errors= {};
                $scope.item= new Item();

                $scope.create= function (ItemForm) {
                    $scope.item.$create(function () {
                        $location.path('/store/items');
                    }, function (err) {
                        $scope.errors= err.data.errors;
                        if (400 === err.status) {
                            angular.forEach(err.data.errors, function (error, input) {
                                ItemForm[input].$setValidity(error.error, false);
                            });
                        }
                    });
                }
            });

            app.controller('StoreItemsUpdateViewCtrl', function ($scope, $route, $location, Item, Enchantment) {
                $scope.errors= {};
                $scope.item= Item.get($route.current.params, function () {}, function () {});
                $scope.enchantments= Enchantment.query(function () {});

                $scope.itemEnchantment= null;
                $scope.itemEnchantments= [];
                $scope.addEnchantment= function () {
                    $scope.itemEnchantments.push(
                        $scope.itemEnchantment.id
                    );
                }

                $scope.update= function (ItemForm) {
                    $scope.item.$update(function () {
                        $location.path('/store/items');
                    }, function (err) {
                        $scope.errors= err.data.errors;
                        if (400 === err.status) {
                            angular.forEach(err.data.errors, function (error, input) {
                                ItemForm[input].$setValidity(error.error, false);
                            });
                        }
                    });
                };

                $scope.delete= function () {
                    $scope.item.$delete(function () {
                        $location.path('/store/items');
                    }, function () {});
                };
            });



            app.factory('Enchantment', function ($resource) {
                return $resource('/api/v1/store/enchantments/:enchantmentId', {enchantmentId:'@id'}, {
                    create:{method:'post'},
                    update:{method:'patch', params:{enchantmentId:'@id'}},
                    delete:{method:'delete', params:{enchantmentId:'@id'}},
                });
            });

            app.controller('StoreEnchantmentsViewCtrl', function ($scope, $location, Enchantment) {
                $scope.enchantments= Enchantment.query(function () {});
            });

            app.controller('StoreEnchantmentsCreateViewCtrl', function ($scope, $route, $location, Enchantment) {
                $scope.errors= {};
                $scope.enchantment= new Enchantment();

                $scope.create= function (Form) {
                    $scope.enchantment.$create(function () {
                        $location.path('/store/enchantments');
                    }, function (err) {
                        $scope.errors= err.data.errors;
                        if (400 === err.status) {
                            angular.forEach(err.data.errors, function (error, input) {
                                Form[input].$setValidity(error.error, false);
                            });
                        }
                    });
                }
            });

            app.controller('StoreEnchantmentsUpdateViewCtrl', function ($scope, $route, $location, Enchantment) {
                $scope.errors= {};
                $scope.enchantment= Enchantment.get($route.current.params, function () {}, function () {});

                $scope.update= function (Form) {
                    $scope.enchantment.$update(function () {
                        $location.path('/store/enchantments');
                    }, function (err) {
                        $scope.errors= err.data.errors;
                        if (400 === err.status) {
                            angular.forEach(err.data.errors, function (error, input) {
                                Form[input].$setValidity(error.error, false);
                            });
                        }
                    });
                };

                $scope.delete= function () {
                    $scope.enchantment.$delete(function () {
                        $location.path('/store/enchantments');
                    }, function () {});
                };
            });

    - var localsJson= JSON.stringify({user: user});
    body(ng-controller='ViewCtrl', ng-cloak, ng-init='locals=#{localsJson}')

        header
            .navbar.navbar-static-top
                .container
                    a.navbar-brand(href='./')
                        span FLYDEV

                    .nav-collapse.collapse

                        ul.nav.navbar-nav

                            li: a(href='#/players') Игроки 
                                b.caret

                            li: a(href='#/servers') Серверы 
                                b.caret

                            li: a(href='#/store') Магазин 
                                b.caret


                        ul.nav.navbar-nav.pull-right
                            li: a(href='engine/') Управление системой
                            li.dropdown(ng-controller='CurrentUserCtrl', ng-class='{open:dropdown.isOpen}')
                                a.dropdown-toggle(href='', ng-click='toggleDropdown()')
                                    strong {{user.username}} 
                                    b.caret

                                ul.dropdown-menu
                                    li: a(href='#/user')
                                        i.icon-user
                                        span   Аккаунт
                                    li.divider
                                    li: a(href='', ng-click='user.logout()')
                                        i.icon-signout
                                        span   Выход

        .view(ng-view, ng-animate='"view"')